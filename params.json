{"name":"Nativefier","tagline":"Wrap any web page natively without even thinking, across Windows, OSX and Linux","body":"# Nativefier\r\n\r\n[![Build Status](https://travis-ci.org/jiahaog/nativefier.svg?branch=development)](https://travis-ci.org/jiahaog/nativefier)\r\n[![Code Climate](https://codeclimate.com/github/jiahaog/nativefier/badges/gpa.svg)](https://codeclimate.com/github/jiahaog/nativefier)\r\n[![npm version](https://badge.fury.io/js/nativefier.svg)](https://www.npmjs.com/package/nativefier)\r\n\r\n![Dock Screenshot](https://raw.githubusercontent.com/jiahaog/nativefier/master/screenshots/Dock%20Screenshot.png)\r\n\r\nYou want to make a native wrapper for WhatsApp Web (or any web page).\r\n\r\n```bash\r\n$ nativefier web.whatsapp.com\r\n```\r\n\r\nYou're done.\r\n\r\n## Table of Contents\r\n\r\n  - [Installation](#installation)\r\n  - [Usage](#usage)\r\n  - [Optional Dependencies](#optional-dependencies)\r\n  - [API](docs/api.md)\r\n  - [How It Works](#how-it-works)\r\n  - [Development](docs/development.md)\r\n  - [License](#license)\r\n\r\n## Introduction\r\n\r\nNativefier is a command line tool that allows you to easily create a desktop application for any web site with succinct and minimal configuration. Apps are wrapped by [Electron](http://electron.atom.io) in an OS executable (`.app`, `.exe`, etc.) for use on Windows, OSX and Linux.\r\n\r\nI did this because I was tired of having to `âŒ˜-tab` or `alt-tab` to my browser and then search through the numerous open tabs when I was using [Facebook Messenger](http://messenger.com) or [Whatsapp Web](http://web.whatsapp.com).\r\n\r\nView the changelog [here](https://github.com/jiahaog/nativefier/blob/master/History.md).\r\n\r\n[Relevant Hacker News Thread](https://news.ycombinator.com/item?id=10930718)\r\n\r\n### Features\r\n\r\n- Automatically retrieves the correct icon and app name\r\n- Flash Support (Needs Testing)\r\n- Javascript and CSS injection\r\n\r\n## Installation\r\n\r\nWith [Node.js](https://nodejs.org/) `>=0.12` installed,\r\n\r\n```bash\r\n# for use from the command line\r\n$ npm install nativefier -g\r\n```\r\n\r\nSee [optional dependencies](#optional-dependencies) for more.\r\n\r\n## Usage\r\n\r\nCreating a native desktop app for [medium.com](http://medium.com):\r\n\r\n```bash\r\n$ nativefier \"http://medium.com\"\r\n```\r\n\r\nNativefier will intelligently attempt to determine the app name, your OS and processor architecture, among other options. If desired, the app name or other options can be overwritten by specifying the `--name \"Medium\"` as part of the command line options, as such.\r\n\r\n```bash\r\n$ nativefier --name \"Some Awesome App\" \"http://medium.com\"\r\n```\r\nRead the [API documentation](docs/api.md) for other command line flags and options that can be used to configure the packaged app.\r\n\r\nIf you would like high resoulution icons to be used, please contribute to the [icon repository](https://github.com/jiahaog/nativefier-icons)!\r\n\r\n**For Windows Users:** Take note that the application menu is automatically hidden by default, you can press `alt` on your keyboard to access it.\r\n\r\n**For Linux Users:** Do not put spaces if you define the app name yourself with `--name`, as this will cause problems (tested on Ubuntu 14.04) when pinning a packaged app to the launcher.\r\n\r\n## Optional Dependencies\r\n\r\n### Icons for Windows Apps from non-Windows platforms\r\n\r\nYou need [Wine](https://www.winehq.org/) installed, make sure that `wine` is in your `$PATH`.\r\n\r\n### Icon Conversion for OSX\r\n\r\nTo support conversion of a `.png` or `.ico` into a `.icns` for a packaged OSX app icon (currently only supported on OSX), you need the following dependencies.\r\n\r\n#### [iconutil](https://developer.apple.com/library/mac/documentation/GraphicsAnimation/Conceptual/HighResolutionOSX/Optimizing/Optimizing.html)\r\n\r\nYou need [XCode](https://developer.apple.com/xcode/) installed.\r\n\r\n#### [imagemagick](http://www.imagemagick.org/script/index.php)\r\n\r\nMake sure `convert` and `identify` are in your `$PATH`.\r\n\r\n### Flash\r\n\r\n#### [Google Chrome](https://www.google.com/chrome/)\r\n\r\nGoogle Chrome is required for flash to be supported. Alternatively, you could download the PepperFlash Chrome plugin and specify the path to it directly with the `--flash` flag. See the command line options below for more details.\r\n\r\n## How It Works\r\n\r\nA template app with the appropriate event listeners and callbacks set up is included in the `./app` folder. When the `nativefier` command is executed, this folder is copied to a temporary directory with the appropriate parameters in a configuration file, and is packaged into an app with [Electron Packager](https://github.com/electron-userland/electron-packager).\r\n\r\nIn addition, I built [GitCloud](https://github.com/jiahaog/gitcloud) to use GitHub as an icon index, and also the [pageIcon](https://github.com/jiahaog/page-icon) fallback to infer a relevant icon from a url.\r\n\r\n## API Documentation\r\n\r\nSee [API](docs/api.md)\r\n\r\n## Development\r\n\r\nSee [Development](docs/development.md)\r\n\r\n## License\r\n\r\n[MIT](LICENSE.md)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}